name: keyless signing container images
on: push
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
#  oidc_debug_test:
#     permissions:
#       contents: read
#       id-token: write
#     runs-on: ubuntu-latest
#     name: A test of the oidc debugger
#     steps:
#       - name: Checkout actions-oidc-debugger
#         uses: actions/checkout@v3
#         with:
#           repository: github/actions-oidc-debugger
#           ref: main
#           path: ./.github/actions/actions-oidc-debugger
#       - name: Debug OIDC Claims
#         uses: ./.github/actions/actions-oidc-debugger
#         with:
#           audience: '${{ github.server_url }}/${{ github.repository_owner }}'
  build-container-image:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.digest.outputs.image_sha }}
      sha: ${{ steps.uuid.outputs.sha_short }}
    permissions:
      id-token: write
      contents: read
      packages: write
      attestations: write
    steps:
      - name: "checkout"
        uses: actions/checkout@v3

      - name: Generate uuid from shortened commit SHA
        id: uuid
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        env:
          IMAGE_TAG: ${{ steps.uuid.outputs.sha_short }}
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG} .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}

      - name: Get image digest
        env:
          IMAGE_TAG: ${{ steps.uuid.outputs.sha_short }}
        id: digest
        run: |
          echo "image_sha=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG})" >> $GITHUB_OUTPUT

  sign-container-image:
    runs-on: ubuntu-latest
    needs: build-container-image
    permissions:
      id-token: write
      contents: read
      packages: write
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Keyless signing of image
        run: |
          echo ${{ needs.build-container-image.outputs.image }}
          cosign sign -y --rekor-url "https://rekor.sigstore.dev/" ${{ needs.build-container-image.outputs.image }}

      - name: Verify the image signing
        run: |
          cosign verify  --rekor-url "https://rekor.sigstore.dev/" ${{ needs.build-container-image.outputs.image }} --certificate-identity "https://github.com/andrewl3wis/messing-with-cosign/.github/workflows/sign.yaml@refs/heads/main" --certificate-oidc-issuer "https://token.actions.githubusercontent.com" | jq .
 
  security-scan:
    needs: build-container-image
    permissions:
      id-token: write
      contents: read
      packages: write
    # Importing a reusable workflow from another repository and branch
    uses: andrewl3wis/security/.github/workflows/grype.yaml@main
    with:
      sha: ${{ needs.build-container-image.outputs.sha }}
      image: ${{ needs.build-container-image.outputs.image }}

  fail-aws:
    needs: build-container-image
    permissions:
      id-token: write
      contents: read
      packages: write
    uses: andrewl3wis/security/.github/workflows/bad-grype.yaml@main
    with:
      sha: ${{ needs.build-container-image.outputs.sha }}
      image: ${{ needs.build-container-image.outputs.image }}